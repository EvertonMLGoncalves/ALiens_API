// <auto-generated />
using System;
using APIALiens.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIALiens.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APIALiens.Models.Alien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Altura")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataEntradaTerra")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataSaidaTerra")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescAlien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Especie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<bool>("IsOnEarth")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlanetaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlanetaId");

                    b.ToTable("Aliens");
                });

            modelBuilder.Entity("APIALiens.Models.Planeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Populacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Planetas");
                });

            modelBuilder.Entity("APIALiens.Models.Poder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Poderes");
                });

            modelBuilder.Entity("AlienPoder", b =>
                {
                    b.Property<int>("AlienId")
                        .HasColumnType("int");

                    b.Property<int>("PoderId")
                        .HasColumnType("int");

                    b.HasKey("AlienId", "PoderId");

                    b.HasIndex("PoderId");

                    b.ToTable("AlienPoder");
                });

            modelBuilder.Entity("APIALiens.Models.Alien", b =>
                {
                    b.HasOne("APIALiens.Models.Planeta", "PlanetaNatal")
                        .WithMany("AliensHabitantes")
                        .HasForeignKey("PlanetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanetaNatal");
                });

            modelBuilder.Entity("AlienPoder", b =>
                {
                    b.HasOne("APIALiens.Models.Alien", null)
                        .WithMany()
                        .HasForeignKey("AlienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIALiens.Models.Poder", null)
                        .WithMany()
                        .HasForeignKey("PoderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("APIALiens.Models.Planeta", b =>
                {
                    b.Navigation("AliensHabitantes");
                });
#pragma warning restore 612, 618
        }
    }
}
